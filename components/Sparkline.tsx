'use client';import{useEffect,useRef}from'react';export default function Sparkline({data,height=56}:{data:number[];height?:number}){const r=useRef<HTMLCanvasElement|null>(null);useEffect(()=>{const c=r.current!,x=c.getContext('2d')!;const w=c.clientWidth,h=height;c.width=w*devicePixelRatio;c.height=h*devicePixelRatio;x.scale(devicePixelRatio,devicePixelRatio);x.clearRect(0,0,w,h);if(data.length<2)return;const m=Math.min(...data),M=Math.max(...data),R=M-m||1;x.beginPath();x.lineWidth=6;x.strokeStyle='rgba(109,214,255,.18)';data.forEach((v,i)=>{const X=(i/(data.length-1))*(w-2)+1,Y=h-((v-m)/R)*(h-2)-1;if(i===0)x.moveTo(X,Y);else x.lineTo(X,Y);});x.stroke();x.beginPath();x.lineWidth=2;x.strokeStyle='#6ae3ff';data.forEach((v,i)=>{const X=(i/(data.length-1))*(w-2)+1,Y=h-((v-m)/R)*(h-2)-1;if(i===0)x.moveTo(X,Y);else x.lineTo(X,Y);});x.stroke();},[data,height]);return <div className='spark'><div className='label'>ratio</div><canvas ref={r} style={{width:'100%',height}}/></div>;}